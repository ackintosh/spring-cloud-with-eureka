server:
  port: ${PORT:9000}

spring:
  application:
    name: gateway
  output.ansi.enabled: ALWAYS
  cloud:
    gateway:
      routes:
        - id: healthy-service
          # The `lb` scheme, to resolve the service name with LoadBalancerClient
          # https://cloud.spring.io/spring-cloud-gateway/reference/html/#the-loadbalancerclient-filter
          uri: lb://healthy-service
          predicates:
            - Path=/healthy/**
          filters:
            - RewritePath=/healthy/(?<path>.*), /$\{path}
            # The `CircuitBreaker` filter is enabled via spring-cloud-starter-circuitbreaker-reactor-resilience4j
            # https://cloud.spring.io/spring-cloud-gateway/reference/html/#spring-cloud-circuitbreaker-filter-factory
            - name: CircuitBreaker
              args:
                # The `name` value is passed to Resilience4JConfigBuilder as `id`
                # SEE: DemoConfiguration#defaultCustomizer
                name: healthyService
        - id: faulty-service
          uri: lb://faulty-service
          predicates:
            - Path=/faulty/**
          filters:
            - RewritePath=/faulty/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: faultyService
        - id: slow-service
          uri: lb://slow-service
          predicates:
            - Path=/slow/**
          filters:
            - RewritePath=/slow/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: slowService

logging.level.io.github.resilience4j: DEBUG

eureka:
  client:
    enabled: true
    service-url:
      defaultZone: http://localhost:9010/eureka/
  instance:
    preferIpAddress: true